.\" Copyright (c) 2020 Jose Fernando Lopez Fernandez <jflopezfernandez@gmail.com>
.\" October 16, 2020 [02:13:11 PM EDT]
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.TH STRING_LENGTH 3  2020-10-14 "libcx Manual"
.SH NAME
string_length \- calculate the length of a string
.SH SYNOPSIS
.nf
.B #include <xlibs/strings.h>
.PP
.BI "size_t string_length(const char* " string );
.fi
.SH DESCRIPTION
The
.BR string_length ()
function calculates the length of the string pointed to by
.IR string ,
excluding the null terminator.
.SH RETURN VALUE
The
.BR string_length ()
function returns the number of characters that precede the
terminating null character.
.SH CONFORMING TO
C11
.SH NOTES
In accordance with the C standard, the
.IR string
argument may be an empty string, but it may not be null.
.SH SEE ALSO
.BR strlen (3)
.SH COLOPHON
This page is part of the initial release of the xlibs C
strings extension library. A description of the project,
information about reporting bugs, and the latest version of
this page can be found at
\%https://github.com/jflopezfernandez/xlibs/.
